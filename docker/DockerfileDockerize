FROM node:18-bookworm-slim AS builder
ENV GHOST_VERSION 5.54.0
ENV NODE_ENV development

RUN apt-get update && apt-get install -y git tar git-filter-repo
COPY . /tmp/ghost
WORKDIR /tmp/ghost

# 必要なパッケージをルートに持ってくる
RUN (cd ghost/bookshelf-filter && git filter-repo -f --subdirectory-filter packages/bookshelf-filter) && \
  (cd ghost/kg-default-cards && git filter-repo -f --subdirectory-filter packages/kg-default-cards) && \
  (cd ghost/kg-markdown-html-renderer && git filter-repo -f --subdirectory-filter packages/kg-markdown-html-renderer)

RUN yarn install --silent && yarn cache clean
RUN yarn archive
RUN cp ./ghost/core/ghost-${GHOST_VERSION}.tgz ./ghost.tgz && \
  tar -xzf ./ghost.tgz && \
  rm ./ghost.tgz && \
  mkdir -p /srv/ghost && \
  mv ./package/* /srv/ghost

# s3 adaptorを移動
RUN mkdir -p /srv/ghost/content/adapters/storage && \ 
  cp -r ./node_modules/ghost-storage-adapter-s3 /srv/ghost/content/adapters/storage/s3

COPY ./ghost/core/content/themes/ghost-theme-2020 /srv/ghost/content/themes/ghost-theme-2020

FROM node:18-alpine
RUN apk add --no-cache git bash
# dockerize---
ENV DOCKERIZE_VERSION v0.6.1
RUN apk add --no-cache openssl shadow\
  && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
  && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
  && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz
# ------------

ENV NODE_ENV production
COPY --from=builder /srv/ghost /srv/ghost
WORKDIR /srv/ghost
RUN yarn install && yarn cache clean
EXPOSE 2368
CMD ["node", "./index.js"]