FROM node:18-buster-slim AS builder
# add "bash" for "[["
RUN apt-get update && apt-get install -y bash git python
ENV GHOST_VERSION 5.54.0
ENV NODE_ENV development

COPY . /srv/ghost

WORKDIR /srv/ghost
RUN yarn install --silent && yarn cache clean

RUN mkdir -p ./ghost/core/content/adapters/storage
RUN cp -r ./node_modules/ghost-storage-adapter-openstack ./ghost/core/content/adapters/storage/openstack

COPY . /srv/ghost

RUN yarn archive
COPY ./ghost/core/ghost-${GHOST_VERSION}.tgz ./ghost.tgz

FROM ghost:alpine
# dockerize---
ENV DOCKERIZE_VERSION v0.6.1
RUN apk add --no-cache openssl shadow\
  && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
  && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
  && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz
# ------------
ENV NODE_ENV production
RUN adduser -D ghost && mkdir -p /etc/sudoers.d \
  && echo "ghost ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/ghost \
  && chmod 0440 /etc/sudoers.d/ghost
USER ghost

WORKDIR /srv/ghost
COPY --from=builder /srv/ghost/ghost.tgz /ghost.tgz

RUN ghost install --archive /ghost.tgz --no-prompt --no-stack --no-setup --no-start

EXPOSE 2368
CMD ["ghost", "start"]

